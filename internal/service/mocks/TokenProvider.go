// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	model "MEDODS-test/internal/domain/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// TokenProvider is an autogenerated mock type for the TokenProvider type
type TokenProvider struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, userID
func (_m *TokenProvider) Get(ctx context.Context, userID string) (*model.RefreshTokenDB, error) {
	ret := _m.Called(ctx, userID)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *model.RefreshTokenDB
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*model.RefreshTokenDB, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.RefreshTokenDB); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.RefreshTokenDB)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTokenProvider creates a new instance of TokenProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTokenProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *TokenProvider {
	mock := &TokenProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
